version: '3'
volumes:
  redis-data:
  es-data:
  prometheus-data:  # Prometheus 데이터 볼륨
  grafana-data:  # Grafana 데이터 볼륨
services:
  next-campus-mysql:
    image: mysql:8.0
    container_name: next-campus-mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: fast
      TZ: Asia/Seoul
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d
    platform: linux/x86_64
    networks:
      - next-campus-network

  next-campus-redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - next-campus-network

  next-campus-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - next-campus-network

  next-campus-kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://next-campus-elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - next-campus-elasticsearch
    networks:
      - next-campus-network

  next-campus-zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://next-campus-elasticsearch:9200
    ports:
      - "9411:9411"
    depends_on:
      - next-campus-elasticsearch
    networks:
      - next-campus-network

  next-campus-prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/  # 로컬 디렉토리를 Prometheus 설정 파일 디렉토리에 매핑
      - prometheus-data:/prometheus  # Prometheus 데이터 저장소를 볼륨으로 사용
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  # 설정 파일 경로
      - '--storage.tsdb.path=/prometheus'  # 데이터 저장 경로
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'  # 콘솔 라이브러리 경로
      - '--web.console.templates=/usr/share/prometheus/consoles'  # 콘솔 템플릿 경로
    ports:
      - 9090:9090  # 로컬 호스트의 9090 포트를 컨테이너의 9090 포트에 매핑
    links:
      - next-campus-cadvisor:next-campus-cadvisor  # cAdvisor와 링크
      - next-campus-alertmanager:next-campus-alertmanager  # Alertmanager와 링크
    depends_on:
      - next-campus-cadvisor  # cAdvisor가 먼저 실행되도록 설정
      # - pushgateway  # 주석 처리된 Pushgateway 종속성
    networks:
      - back-tier  # back-tier 네트워크에 연결
      - next-campus-network
    restart: always  # 항상 재시작

  next-campus-alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093  # 로컬 호스트의 9093 포트를 컨테이너의 9093 포트에 매핑
    volumes:
      - ./alertmanager/:/etc/alertmanager/  # 로컬 디렉토리를 Alertmanager 설정 파일 디렉토리에 매핑
    networks:
      - back-tier  # back-tier 네트워크에 연결
    restart: always  # 항상 재시작
    command:
      - '--config.file=/etc/alertmanager/config.yml'  # 설정 파일 경로
      - '--storage.path=/alertmanager'  # 저장소 경로
  next-campus-node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro # /proc 디렉토리를 읽기 전용으로 매핑
      - /sys:/host/sys:ro  # /sys 디렉토리를 읽기 전용으로 매핑
    command:
      - '--path.rootfs=/host'  # rootfs 경로 설정
      - '--path.procfs=/host/proc'  # procfs 경로 설정
      - '--path.sysfs=/host/sys'  # sysfs 경로 설정
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"  # 무시할 마운트 포인트 패턴
    ports:
      - "9100:9100"  # 로컬 호스트의 9100 포트를 컨테이너의 9100 포트에 매핑
    networks:
      - back-tier  # back-tier 네트워크에 연결
    restart: always  # 항상 재시작
    deploy:
      mode: global  # 글로벌 모드로 설정하여 클러스터의 모든 노드에서 실행

  next-campus-cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    privileged: true  # privileged 모드로 실행
    devices:
      - /dev/kmsg:/dev/kmsg  # /dev/kmsg 디바이스 매핑
    volumes:
      - /var/run:/var/run:ro  # /var/run 디렉토리를 읽기 전용으로 매핑
      - /sys:/sys:ro  # /sys 디렉토리를 읽기 전용으로 매핑
      - /var/lib/docker/:/var/lib/docker:ro  # /var/lib/docker 디렉토리를 읽기 전용으로 매핑
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Docker 소켓을 읽기 전용으로 매핑
      - /etc/machine-id:/etc/machine-id:ro  # /etc/machine-id 파일을 읽기 전용으로 매핑
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro  # /var/lib/dbus/machine-id 파일을 읽기 전용으로 매핑
    restart: unless-stopped  # 중지될 경우 다시 시작
    expose:
      - 8085  # 8085 포트를 노출
    networks:
      - back-tier  # back-tier 네트워크에 연결
      - next-campus-network
    labels:
      org.label-schema.group: "monitoring"  # monitoring 그룹 레이블

  next-campus-grafana:
    image: grafana/grafana
    user: "472"  # 유저 ID 설정
    depends_on:
      - next-campus-prometheus  # Prometheus가 먼저 실행되도록 설정
    ports:
      - 3000:3000  # 로컬 호스트의 3000 포트를 컨테이너의 3000 포트에 매핑
    volumes:
      - grafana-data:/var/lib/grafana  # Grafana 데이터 디렉토리를 매핑
      - ./grafana/provisioning/:/etc/grafana/provisioning/  # Grafana 설정 디렉토리를 매핑
    env_file:
      - ./grafana/config.monitoring  # 환경 변수 파일
    networks:
      - back-tier  # back-tier 네트워크에 연결
      - front-tier  # front-tier 네트워크에 연결
      - next-campus-network
    restart: always  # 항상 재시작

  next-discovery:
    image: next-discovery:latest
    container_name: next-discovery
    ports:
      - "8000:8000"
    networks:
      - next-campus-network

  next-gateway:
    image: next-gateway:latest
    container_name: next-gateway
    depends_on:
      - next-discovery
    ports:
      - "9000:8080"
    networks:
      - next-campus-network

  next-graphql:
    image: next-graphql:latest
    container_name: next-graphql
    ports:
      - "8080:8080"
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

  next-course-service:
    image: next-course-service:latest
    container_name: next-course-service
    ports:
      - "8081:8080"
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

  next-enrollment-service:
    image: next-enrollment-service:latest
    container_name: next-enrollment-service
    ports:
      - "8082:8080"
      - "9092:9090" #grpc
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

  next-file-manage-service:
    image: next-file-manage-service:latest
    container_name: next-file-manage-service
    ports:
      - "8083:8080"
    volumes:
      - ./videos:/videos
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

  next-playback-service:
    image: next-playback-service:latest
    container_name: next-playback-service
    ports:
      - "8084:8080"
      - "9094:9090" #grpc
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

  next-user-service:
    image: next-user-service:latest
    container_name: next-user-service
    ports:
      - "8085:8080"
    depends_on:
      - next-discovery
    networks:
      - next-campus-network

networks:
  back-tier:  # Prometheus 스택 내부 네트워크
    driver: bridge
  front-tier:  # Grafana와 외부 간의 네트워크
  next-campus-network:
    driver: bridge
